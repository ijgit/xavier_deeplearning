#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
# export DH_VERBOSE=1
SWIG_ARMHF := {destdir}/{install_dir}/edgetpu/swig/_edgetpu_cpp_wrapper.cpython-*-arm-linux-gnueabihf.so
SWIG_ARM64 := {destdir}/{install_dir}/edgetpu/swig/_edgetpu_cpp_wrapper.cpython-*-aarch64-linux-gnu.so
SWIG_AMD64 := {destdir}/{install_dir}/edgetpu/swig/_edgetpu_cpp_wrapper.cpython-*-x86_64-linux-gnu.so

FILENAME := libedgetpu.so.1.0
SONAME := libedgetpu.so.1
LIB_DEV := debian/libedgetpu-dev/usr/lib/$(DEB_HOST_GNU_TYPE)
LIB_STD := debian/libedgetpu1-std/usr/lib/$(DEB_HOST_GNU_TYPE)
LIB_MAX := debian/libedgetpu1-max/usr/lib/$(DEB_HOST_GNU_TYPE)
COMPILER_BIN := debian/edgetpu-compiler/usr/bin

export PYBUILD_NAME=edgetpu

ifeq ($(DEB_TARGET_ARCH),armhf)
  export PYBUILD_AFTER_INSTALL=rm -f $(SWIG_ARM64) $(SWIG_AMD64)
  CPU := armv7a
else ifeq ($(DEB_TARGET_ARCH),arm64)
  export PYBUILD_AFTER_INSTALL=rm -f $(SWIG_ARMHF) $(SWIG_AMD64)
  COMPILER_ARCH := aarch64
  CPU := aarch64
else ifeq ($(DEB_TARGET_ARCH),amd64)
  export PYBUILD_AFTER_INSTALL=rm -f $(SWIG_ARMHF) $(SWIG_ARM64)
  COMPILER_ARCH := x86_64
  CPU := k8
endif

%:
	# Assume that all edgetpu/swig/*.so have been already built.
	dh $@ --with python3 --buildsystem=pybuild

override_dh_auto_install:
	dh_auto_install

	mkdir -p $(LIB_DEV)
	ln -fs $(FILENAME) $(LIB_DEV)/libedgetpu.so

	mkdir -p $(LIB_STD)
	cp -f libedgetpu/throttled/$(CPU)/$(FILENAME) $(LIB_STD)/$(FILENAME)
	ln -fs $(FILENAME) $(LIB_STD)/$(SONAME)

	mkdir -p $(LIB_MAX)
	cp -f libedgetpu/direct/$(CPU)/$(FILENAME) $(LIB_MAX)/$(FILENAME)
	ln -fs $(FILENAME) $(LIB_MAX)/$(SONAME)

	mkdir -p $(COMPILER_BIN)
	cp -fr compiler/$(COMPILER_ARCH)/* $(COMPILER_BIN)

# Skip .so post processing.
override_dh_strip:
override_dh_shlibdeps:
